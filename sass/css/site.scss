:root {
  --bs-green: #0ce3ac;
}
html {
  background-color: #000000
}

body {
  font-size: 16px;
  padding: 0;
  margin: 0;
  min-height: 100vh; /* This will ensure the body is at least as tall as the viewport */
  background-color: #000000; /* Set a fallback color for when the image doesn't cover the entire screen */

  /* Setting a gradient background */
  background: radial-gradient(circle at 60% 0%, #370a97, #000000 70%);
  background-size: 100% 100%; /* This will cover the entire viewport */
  background-repeat: no-repeat; /* This will prevent the background from repeating */

  /* Adding a subtle pattern effect for a detailed look */
  background-blend-mode: multiply;
  background-size: cover;
  color: #FDF7FF; /* Ensures text is readable on dark backgrounds */
  font-family: 'Arial', sans-serif; /* Set your desired font */
  margin: 0; /* Removes default margins */
  height: 100vh; /* Ensures the gradient covers the entire screen */
}

body::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  background-image:
      linear-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 64px 64px; /* Adjust the size for grid density */
  z-index: 1;

  mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.2) 20%, rgba(0, 0, 0, 1) 50%, rgba(0, 0, 0, 0.2) 80%, rgba(0, 0, 0, 0));
}

/* currently disabled while testing grid */
.separator {
  width: 100%;
  height: 1px; /* Adjust the thickness */
  background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0) 100%);
  margin-bottom: 20px;
  border: none;
}



@for $i from 1 through 6 {
  h#{$i} {
    color: #9C89B3;
    padding: 0 0 0 1px;
    margin: 0.5em 0 0.5em 0;
    height: 2.5rem - (0.167rem * $i);
    max-height: 2rem;
    min-height: 2rem;
    display: flex;
    justify-content: space-between;
    align-items: end;
    border-bottom: none;
    position: relative;
    font-size: 2rem - (0.167rem * $i);

    &::after {
      content: "";
      position: absolute;
      left: 0;
      bottom: -5px; // Adjust this value to move the line further away from the text
      width: 100%;
      height: 1px;
      background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.2) 5%, rgba(255, 255, 255, 0) 100%);
    }
  }

  h#{$i} > a {
    color: rgba(255, 255, 255, 0.7);
    margin: 0;
    text-decoration: none;
    transition: text-shadow 0.1s ease-in-out;

    &:hover {
      color: rgba(255, 255, 255, 1);
      text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
    }
  }
}

@for $i from 1 through 6 {
  .main-content h#{$i} {
    display: block;
    align-items: start;
    font-size: 1.3em - (0.1em * ($i - 1));
  }

  .main-content h#{$i} > a {
    color: var(--bs-primary);
    text-decoration: none;
  }
}

.main-content * img {

}

.main-content img {
  object-fit: contain;
  padding: 8px;
  max-width: 750px;
}

.main-content p img {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.main-content p {
  padding: 0 0.25rem;
  margin: 0 0 0.25rem;
  width: 100%;
  text-align: left;
}

.main-content table {
  justify-content: space-around;
}

a {
  color: #64BAAA
}

.dropdown:hover .dropdown-menu {
  display: block;
}

.dropdown:focus .dropdown-menu {
  display: block;
}

.image-gallery {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.image-gallery > a {
  flex: 1 1 auto;
  cursor: pointer;
  position: relative;
  border-radius: 5px;
  border: 1px solid rgba(var(--bs-primary-rgb), 0);
}

.image-gallery > a:hover {
  border: 1px solid rgba(var(--bs-primary-rgb), 1);
}

.image-gallery > a .album-hover-info {
  display: none !important;
}

.image-gallery > a:hover .album-hover-info {
  display: flex !important;
}

.image-gallery a img {
  object-fit: cover;
  width: 100%;
  height: 100%;
  border: 1px solid rgba(var(--bs-secondary-rgb), 0.25);
  border-radius: 5px;
  vertical-align: middle;
  background: url("/media/img/img-loader.gif") no-repeat center;
}

.image-gallery::after {
  content: "";
  flex-grow: 999;
}

img {
  max-width: 100% !important;
  max-height: 100% !important;
  object-fit: contain;
}

.navbar.bg-body-tertiary {
  background-color: transparent !important;
}

.nav-item {
  margin-right: 20px;
}

.nav-link {
  color: rgba(255, 255, 255, 0.7);
  margin: 0;

  &:hover {
    color: rgba(255, 255, 255, 1);
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.2); /* This will create a glow effect around the text */
  }
}

#nav-link-special {
  color: rgba(255, 255, 255, 1);
  background-color: #370a97;
  border: 1px solid #b681f1;
  border-radius: 8px;
  box-shadow: inset 0 0 5px rgba(255, 255, 255, 0.45);
  padding: 10px 20px;
  text-align: center;
  cursor: pointer;
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

#nav-link-special:hover {
  box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.45); /* Inner glow effect */
}

.status-container {
  background-color: purple;

}

.status-link {
  background-color: purple; // Change this to your desired color
}

.status-title {
  color: white;
  background-color: purple;

}

.status-text {
  // common styles for all status texts
  background-color: purple;

  &.status-unknown {
    // styles for the unknown status text
  }

  &.status-closed {
    // styles for the closed status text
  }

  &.status-closing {
    // styles for the closing status text
  }

  &.status-open {
    // styles for the open status text
  }
}